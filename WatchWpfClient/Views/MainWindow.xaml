<Window x:Class="WatchWpfClient.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WatchWpfClient"
        xmlns:controls="clr-namespace:WatchWpfClient.Views.Controls"
        xmlns:converters="clr-namespace:WatchWpfClient.Views.Converters"
        xmlns:vm="clr-namespace:WatchWpfClient.ViewModels"
        mc:Ignorable="d"
        Title="Web Assisted Time CHeck" Height="800" Width="800">
    <Window.Resources>
        <converters:StateToTimeSyncVis x:Key="StateToTimeSyncVis"/>
        <converters:StateToLogInVis x:Key="StateToLogInVis"/>
        <converters:StateToMsgVis x:Key="StateToMsgVis"/>
        <Storyboard x:Key="SecsAfterFinishSb">
            <DoubleAnimation
                Storyboard.TargetName="Second"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                Duration="0:1:0"
                From="0"
                To="360"
                RepeatBehavior="Forever"/>
        </Storyboard>
        <Storyboard x:Key="MinsAfterFinishSb">
            <DoubleAnimation
                Storyboard.TargetName="Minute"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                Duration="1:0:0"
                From="0"
                To="360"
                RepeatBehavior="Forever"/>
        </Storyboard>
        <Storyboard x:Key="HoursAfterFinishSb">
            <DoubleAnimation
                Storyboard.TargetName="Hour"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                Duration="12:0:0"
                To="360"
                RepeatBehavior="Forever"/>
        </Storyboard>
    </Window.Resources>
    <Grid Background="White" DataContext="{StaticResource MainWatchVm}">
        <Grid.RowDefinitions>
            <RowDefinition Height=".75*"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height=".25*"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Height="425" Width="400">
            <Grid.Background>
                <ImageBrush ImageSource="..\Images\Clock.png"/>
            </Grid.Background>
            <Line x:Name="Hour"
                  Y2="-80"
                  Stroke="Black"
                  StrokeThickness="4"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  RenderTransformOrigin=".5,.5">
                <Line.RenderTransform>
                    <RotateTransform Angle="{Binding Path=Clock.HourStartAngle, Mode=OneTime}"/>
                </Line.RenderTransform>
            </Line>
            <Line x:Name="Minute"
                  Y2="-120"
                  Stroke="Black"
                  StrokeThickness="3"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  RenderTransformOrigin=".5,.5">
                <Line.RenderTransform>
                    <RotateTransform Angle="{Binding Path=Clock.MinuteStartAngle, Mode=OneTime}"/>
                </Line.RenderTransform>
            </Line>
            <Line x:Name="Second"
                  Y2="-140"
                  Stroke="Silver"
                  StrokeThickness="2"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  RenderTransformOrigin=".5,.5">
                <Line.RenderTransform>
                    <RotateTransform Angle="{Binding Path=Clock.SecondStartAngle, Mode=OneTime}"/>
                </Line.RenderTransform>
            </Line>
            <Button x:Name="button0" HorizontalAlignment="Center" Height="34" Margin="0,199,0,0" VerticalAlignment="Top" Width="34" Opacity="0"
                    Command="{Binding Path=ToggleChannelInputCommand}"/>
            <Button x:Name="button12" HorizontalAlignment="Left" Margin="183,41,0,0" VerticalAlignment="Top" Height="43" Opacity="0" Width="40"
                    Command="{Binding Path=AddChannelPartCommand}" CommandParameter="12"/>
            <Button x:Name="button1" HorizontalAlignment="Left" Margin="245,62,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.017,0.404" Height="33" Width="42" Opacity="0"
                    Command="{Binding Path=AddChannelPartCommand}" CommandParameter="01"/>
            <Button x:Name="button2" HorizontalAlignment="Left" Margin="299,117,0,0" VerticalAlignment="Top" Height="37" Width="39" Opacity="0"
                    Command="{Binding Path=AddChannelPartCommand}" CommandParameter="02"/>
            <Button x:Name="button3" HorizontalAlignment="Left" Margin="326,0,0,0" VerticalAlignment="Center" Height="41" Width="37" Opacity="0"
                    Command="{Binding Path=AddChannelPartCommand}" CommandParameter="03"/>
            <Button x:Name="button4" HorizontalAlignment="Left" Margin="299,273,0,0" VerticalAlignment="Top" Height="44" Width="39" Opacity="0"
                    Command="{Binding Path=AddChannelPartCommand}" CommandParameter="04"/>
            <Button x:Name="button5" HorizontalAlignment="Left" Margin="245,324,0,0" VerticalAlignment="Top" Height="39" Width="49" Opacity="0"
                    Command="{Binding Path=AddChannelPartCommand}" CommandParameter="05"/>
            <Button x:Name="button6" HorizontalAlignment="Center" Margin="0,344,0,0" VerticalAlignment="Top" Opacity="0" Height="39" Width="34"
                    Command="{Binding Path=AddChannelPartCommand}" CommandParameter="06"/>
            <Button x:Name="button7" HorizontalAlignment="Left" Margin="114,317,0,0" VerticalAlignment="Top" Height="46" Width="35" Opacity="0"
                    Command="{Binding Path=AddChannelPartCommand}" CommandParameter="07"/>
            <Button x:Name="button8" HorizontalAlignment="Left" Margin="63,267,0,0" VerticalAlignment="Top" Opacity="0" Height="43" Width="35"
                    Command="{Binding Path=AddChannelPartCommand}" CommandParameter="08"/>
            <Button x:Name="button9" HorizontalAlignment="Left" Margin="41,0,0,0" VerticalAlignment="Center" Opacity="0" Height="41" Width="39"
                    Command="{Binding Path=AddChannelPartCommand}" CommandParameter="09"/>
            <Button x:Name="button10" HorizontalAlignment="Left" Margin="63,117,0,0" VerticalAlignment="Top" Opacity="0" Height="37" Width="46"
                    Command="{Binding Path=AddChannelPartCommand}" CommandParameter="10"/>
            <Button x:Name="button11" HorizontalAlignment="Left" Margin="114,62,0,0" VerticalAlignment="Top" Opacity="0" Height="42" Width="42"
                    Command="{Binding Path=AddChannelPartCommand}" CommandParameter="11"/>
            <Grid.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard x:Name="SecondSb">
                            <DoubleAnimation
                                Storyboard.TargetName="Second"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                Duration="{Binding Path=Clock.SecondStartDuration, Mode=OneTime}"
                                To="360"
                                Completed="DoubleAnimation_Completed"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard x:Name="MinuteSb">
                            <DoubleAnimation
                                Storyboard.TargetName="Minute"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                Duration="{Binding Path=Clock.MinuteStartDuration, Mode=OneTime}"
                                To="360"
                                Completed="DoubleAnimation_Completed_1"/>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard x:Name="HourSb">
                            <DoubleAnimation
                                Storyboard.TargetName="Hour"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                Duration="{Binding Path=Clock.HourStartDuration, Mode=OneTime}"
                                To="360"
                                Completed="DoubleAnimation_Completed_2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>
        </Grid>
        <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch"/>
        <Separator Grid.Row="1"/>
        <Grid Grid.Row="2" >
            <controls:TimeSyncDisplay Visibility="{Binding Path=State, Converter={StaticResource StateToTimeSyncVis}}"></controls:TimeSyncDisplay>
            <controls:LogIn  Visibility="{Binding Path=State, Converter={StaticResource StateToLogInVis}}"></controls:LogIn>
            <controls:MessagesDisplay Visibility="{Binding Path=State, Converter={StaticResource StateToMsgVis}}"></controls:MessagesDisplay>
        </Grid>
        <StackPanel Orientation="Vertical" Grid.Row="3">
            <Separator/>
            <DockPanel>
                <Button Width="50" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="5" DockPanel.Dock="Right">Close</Button>
            </DockPanel>
        </StackPanel>
    </Grid>
</Window>
